{"version":3,"file":"astro_BNwe5Cts.mjs","sources":["../../../src/content/blog/astro.md"],"sourcesContent":["\n\t\t\t\timport { unescapeHTML, spreadAttributes, createComponent, render, renderComponent, maybeRenderHead } from \"C:/Users/User/astro-blog-latest/node_modules/astro/dist/runtime/server/index.js\";\n\t\t\t\timport { AstroError, AstroErrorData } from \"C:/Users/User/astro-blog-latest/node_modules/astro/dist/core/errors/index.js\";\n\t\t\t\t\n\n\t\t\t\tconst html = \"<p>Build fast, content-focused websites</p>\\n<p>Astro is a static site builder designed to make it easy to create fast, content-focused websites. With Astro, you can use your favorite framework, such as React, Svelte, or Vue, to build your site and get lightning-fast performance. Astro also supports features like TypeScript, Scoped CSS, and Sass, and comes with built-in support for SEO and syndication through features like automatic sitemaps, RSS feeds, and pagination. Additionally, Astro can automatically hydrate interactive components on demand, so your users only load the content they need. Whether youâ€™re looking to build a simple blog or a complex web application, Astro has you covered.</p>\\n<h3 id=\\\"prerequisites\\\">Prerequisites</h3>\\n<ul>\\n<li>Node.js - v18.14.1 or higher.</li>\\n<li>Text editor - recommended VS Code with the Official Astro extension</li>\\n<li>Terminal - Astro is accessed through its command-line interface (CLI)</li>\\n</ul>\\n<h3 id=\\\"getting-started\\\">Getting Started</h3>\\n<p>Starting a new project in Astro is easy:</p>\\n<pre class=\\\"astro-code github-dark\\\" style=\\\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\"># create a new project with npm</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#B392F0\\\">npm</span><span style=\\\"color:#9ECBFF\\\"> create</span><span style=\\\"color:#9ECBFF\\\"> astro@latest</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#79B8FF\\\">cd</span><span style=\\\"color:#9ECBFF\\\"> new-project-directory</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\"># install your dependencies</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#B392F0\\\">npm</span><span style=\\\"color:#9ECBFF\\\"> install</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D\\\"># start the dev server and open your browser</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#B392F0\\\">npm</span><span style=\\\"color:#9ECBFF\\\"> run</span><span style=\\\"color:#9ECBFF\\\"> dev</span></span></code></pre>\\n<h3 id=\\\"how-astro-works\\\">How Astro Works</h3>\\n<p>Astro is a static site generator that allows you to build websites using your favorite JavaScript web framework, such as React, Svelte, or Vue. It generates static HTML during the build process, resulting in a fully static website with no JavaScript on the final page. However, Astro also allows you to add client-side JavaScript when needed, such as for interactive components like image carousels or shopping carts. These components are only loaded when needed, and the rest of the site remains as lightweight, static HTML. This means that you can have the best of both worlds: fast, static HTML for most of your site, and the ability to add interactive components when needed. Astro also has built-in support for partial hydration and the ability to defer loading of components until they become visible on the page, making it easy to optimize your site for performance.</p>\";\n\n\t\t\t\texport const frontmatter = {\"title\":\"Astro.js\",\"description\":\"Here is a sample of some basic Markdown syntax that can be used when writing Markdown content in Astro.\",\"pubDate\":\"Jul 01 2022\",\"heroImage\":\"/social.webp\"};\n\t\t\t\texport const file = \"C:/Users/User/astro-blog-latest/src/content/blog/astro.md\";\n\t\t\t\texport const url = undefined;\n\t\t\t\texport function rawContent() {\n\t\t\t\t\treturn \"\\nBuild fast, content-focused websites\\n\\n\\nAstro is a static site builder designed to make it easy to create fast, content-focused websites. With Astro, you can use your favorite framework, such as React, Svelte, or Vue, to build your site and get lightning-fast performance. Astro also supports features like TypeScript, Scoped CSS, and Sass, and comes with built-in support for SEO and syndication through features like automatic sitemaps, RSS feeds, and pagination. Additionally, Astro can automatically hydrate interactive components on demand, so your users only load the content they need. Whether you're looking to build a simple blog or a complex web application, Astro has you covered.\\n\\n\\n### Prerequisites\\n\\n- Node.js - v18.14.1 or higher.\\n- Text editor - recommended VS Code with the Official Astro extension\\n- Terminal - Astro is accessed through its command-line interface (CLI)\\n\\n\\n### Getting Started\\n\\nStarting a new project in Astro is easy:\\n\\n```shell\\n# create a new project with npm\\nnpm create astro@latest\\ncd new-project-directory\\n\\n\\n# install your dependencies\\nnpm install\\n\\n# start the dev server and open your browser\\nnpm run dev\\n```\\n\\n\\n\\n### How Astro Works\\n\\nAstro is a static site generator that allows you to build websites using your favorite JavaScript web framework, such as React, Svelte, or Vue. It generates static HTML during the build process, resulting in a fully static website with no JavaScript on the final page. However, Astro also allows you to add client-side JavaScript when needed, such as for interactive components like image carousels or shopping carts. These components are only loaded when needed, and the rest of the site remains as lightweight, static HTML. This means that you can have the best of both worlds: fast, static HTML for most of your site, and the ability to add interactive components when needed. Astro also has built-in support for partial hydration and the ability to defer loading of components until they become visible on the page, making it easy to optimize your site for performance.\";\n\t\t\t\t}\n\t\t\t\texport function compiledContent() {\n\t\t\t\t\treturn html;\n\t\t\t\t}\n\t\t\t\texport function getHeadings() {\n\t\t\t\t\treturn [{\"depth\":3,\"slug\":\"prerequisites\",\"text\":\"Prerequisites\"},{\"depth\":3,\"slug\":\"getting-started\",\"text\":\"Getting Started\"},{\"depth\":3,\"slug\":\"how-astro-works\",\"text\":\"How Astro Works\"}];\n\t\t\t\t}\n\n\t\t\t\texport const Content = createComponent((result, _props, slots) => {\n\t\t\t\t\tconst { layout, ...content } = frontmatter;\n\t\t\t\t\tcontent.file = file;\n\t\t\t\t\tcontent.url = url;\n\n\t\t\t\t\treturn render`${maybeRenderHead(result)}${unescapeHTML(html)}`;\n\t\t\t\t});\n\t\t\t\texport default Content;\n\t\t\t\t"],"names":["render"],"mappings":";;;;AAKI,MAAM,IAAI,GAAG,0gGAA0gG,CAAC;AAC5hG;AACA,IAAgB,MAAC,WAAW,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,yGAAyG,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,cAAc,EAAE;AAC/N,IAAgB,MAAC,IAAI,GAAG,4DAA4D;AACpF,IAAgB,MAAC,GAAG,GAAG,UAAU;AACjC,IAAW,SAAS,UAAU,GAAG;AACjC,KAAK,OAAO,giEAAgiE,CAAC;AAC7iE,KAAK;AACL,IAAW,SAAS,eAAe,GAAG;AACtC,KAAK,OAAO,IAAI,CAAC;AACjB,KAAK;AACL,IAAW,SAAS,WAAW,GAAG;AAClC,KAAK,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACpM,KAAK;AACL;AACA,IAAgB,MAAC,OAAO,GAAG,eAAe,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,KAAK;AACtE,KAAK,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,EAAE,GAAG,WAAW,CAAC;AAChD,KAAK,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,KAAK,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB;AACA,KAAK,OAAOA,cAAM,CAAC,EAAE,eAAe,CAAO,CAAC,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,KAAK;;;;"}